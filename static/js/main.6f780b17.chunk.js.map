{"version":3,"sources":["components/BottomNav/js/BottomNav.js","components/NotesContainer/launcherImage.svg","components/NoteItem/js/NoteItem.js","components/NotesContainer/js/NotesContainer.js","components/Home/js/Home.js","components/NewNote/js/NewNote.js","components/contact/js/contact.js","components/contact/js/contactContainer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","BottomNav","props","classes","AppBar","color","className","Toolbar","Fab","aria-label","onClick","changeView","currentView","IconButton","edge","ContactsRounded","font","fontFamily","NoteItem","notesList","JSON","parse","localStorage","getItem","currentNote","noteId","content","lastEdit","title","useEffect","document","getElementById","innerHTML","ListItem","button","alignItems","ListItemText","primary","id","secondary","Date","toString","ListItemIcon","e","stopPropagation","updateNotes","setItem","stringify","deleteNote","Notes","useState","notes","updateNotesList","Object","keys","length","List","reverse","map","Grid","container","item","xs","src","launcherImg","alt","Home","NewNote","action","uuidv4","Paper","elevation","initialValue","getNoteTitle","apiKey","init","selector","height","menubar","plugins","toolbar","inline","skin","icons","onEditorChange","editor","eid","now","getContent","getNoteContent","auto_focus","branding","resize","content_style","justify","Contact","state","name","error","value","email","message","isValid","successMessage","handleChange","bind","handleSubmit","event","target","this","setState","trim","match","sendFeedback","message_html","from_name","from_mail","templateId","variables","window","emailjs","send","then","res","console","log","catch","err","Fragment","noValidate","autoComplete","TextField","label","onChange","helperText","required","fullWidth","size","multiline","rows","Button","variant","React","Component","ContactContainer","sm","href","rel","Instagram","Facebook","LinkedIn","GitHub","Language","createMuiTheme","palette","main","App","view","setView","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6f780b17.chunk.js","sourcesContent":["import {AppBar, IconButton} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport '../css/BottomNav.css';\nimport { ContactsRounded } from '@material-ui/icons';\n\nconst useStyles = makeStyles( (theme) => ({\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function BottomNav(props) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                <Toolbar>\n                    <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton} onClick={()=>props.changeView({currentView:'newNote'})}>\n                        <AddIcon />\n                    </Fab>\n                    <div className={classes.grow} />\n                    <IconButton edge = \"end\" color = \"inherit\" onClick={()=>props.changeView({currentView:'contact'})}>\n                        <ContactsRounded />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />  \n        </>    \n    );\n}","export default __webpack_public_path__ + \"static/media/launcherImage.4bb69a3f.svg\";","import { ListItem, ListItemText, ListItemIcon, makeStyles, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteRounded';\nimport \"../css/NoteItem.css\";\nimport {useEffect} from 'react';\n\nconst useStyles = makeStyles ( () => ({\n    font: {\n        fontFamily: 'Lato'\n    }\n}));\nexport default function NoteItem(props) {\n    const notesList = JSON.parse(localStorage.getItem('notesList'));\n    const currentNote = notesList[props.noteId];\n    const content = (currentNote.content) ? currentNote.content : \"\";\n    const lastEdit = currentNote.lastEdit;\n    const title = (currentNote.title) ? currentNote.title : \"\";\n    \n    const deleteNote = (e,id) => {\n        e.stopPropagation();\n        delete notesList[id];\n        props.updateNotes(notesList);\n        localStorage.setItem('notesList', JSON.stringify(notesList));\n    }\n\n    useEffect(() => {\n        document.getElementById(props.noteId+\"$content\").innerHTML = content;\n        document.getElementById(props.noteId+\"$title\").innerHTML = title;\n    });\n    const classes = useStyles();\n    return (\n        <ListItem \n            button \n            alignItems=\"center\" \n            className = \"NoteItem\"\n            onClick = { \n                ()=> {\n                    props.changeView( { currentView : 'editNote', noteId: props.noteId} );\n                }\n            } \n        >\n            <ListItemText \n                className = {classes.font}\n                primary = { <span id = {props.noteId+\"$title\"}  className = \"noteTitle\"></span> } \n                secondary = { \n                    <>\n                        <span id={props.noteId+\"$content\"} className = \"noteContent\"></span>\n                        <i className = \"lastEdit\">last edit: {new Date(lastEdit).toString()}</i>\n                    </> \n                }\n            />\n            <ListItemIcon>\n                <IconButton onClick = { (e) => deleteNote(e,props.noteId) }>\n                    <DeleteIcon color = \"secondary\" className = \"deleteIcon\" />\n                </IconButton>           \n            </ListItemIcon>\n        </ListItem>\n    );\n}","import {useState} from 'react';\nimport launcherImg from '../launcherImage.svg';\nimport '../css/NotesContainer.css';\nimport Grid from '@material-ui/core/Grid';\nimport NoteItem from '../../NoteItem/js/NoteItem.js';\nimport { List } from '@material-ui/core';\n\nexport default function Notes(props) {\n    const [notes, updateNotesList] = useState(JSON.parse(localStorage.getItem('notesList')) || {});\n    let notesCount = Object.keys(notes).length;\n    \n    if(notesCount > 0)\n        return (\n            <List>\n                {\n                    Object.keys(notes).reverse().map( (id)=><NoteItem \n                        changeView = {props.changeView} \n                        noteId = {id} \n                        key = {id}\n                        updateNotes = {updateNotesList}\n                    /> )\n                }  \n            </List>   \n        );\n    return (\n        <Grid\n            container\n            alignItems = \"center\"\n            className = \"notesContainer\"\n        >\n            <Grid item xs={1}></Grid>\n            <Grid item xs= {10}>\n                <Grid item xs={12}>\n                    <center><img src = {launcherImg} alt=\"launcherImg\" className = \"launcherImg centered\"/></center>\n                </Grid>\n                <Grid item xs = {12}>\n                    <h1 className = \"headingMain\">create <b>NOTES</b> with ease!</h1>\n                </Grid>\n            </Grid>\n            <Grid item xs={1}></Grid>\n        </Grid>\n    );\n}","import BottomNav from '../../BottomNav/js/BottomNav.js';\nimport Notes from '../../NotesContainer/js/NotesContainer.js';\n\nfunction Home(props) {\n    return (\n        <>\n            <Notes changeView = {props.changeView} />\n            <BottomNav changeView = {props.changeView} />\n        </>\n    )\n}\n\nexport default Home;","import Grid from '@material-ui/core/Grid';\nimport {Editor} from '@tinymce/tinymce-react';\nimport {v4 as uuidv4} from 'uuid';\nimport Paper from '@material-ui/core/Paper';\nimport \"../css/NewNote.css\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ContactsRounded from '@material-ui/icons/ContactsRounded';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function NewNote(props) {\n\n    const notes = JSON.parse(localStorage.getItem('notesList'));\n    \n    if(!notes) {\n        localStorage.setItem( 'notesList' , JSON.stringify({}) );\n    } \n\n    const generateId = ()=>{\n        if(props.action === 'add') \n        return uuidv4();\n        return props.noteId;\n    }\n    const id = generateId(); \n\n    const handleContentChange = (e, editor) => {\n        let eid = id;\n        let notesList = JSON.parse(localStorage.getItem('notesList'));\n        if(!notesList[eid]) {\n            notesList[eid] = { \n                lastEdit: Date.now(),\n                content: editor.getContent()\n            };\n        }\n        else {\n            notesList[eid][\"lastEdit\"] = Date.now();\n            notesList[eid][\"content\"] = editor.getContent();\n        }       \n        localStorage.setItem('notesList',JSON.stringify(notesList));\n    }\n\n    const handleTitleChange = (e, editor) => {\n        let eid = id;\n        let notesList = JSON.parse(localStorage.getItem('notesList'));\n        if(!notesList[eid]) {\n            notesList[eid] = { \n                lastEdit: Date.now(),\n                title: editor.getContent()\n            };\n        }\n        else {\n            notesList[eid][\"lastEdit\"] = Date.now();\n            notesList[eid][\"title\"] = editor.getContent();\n        }    \n        localStorage.setItem('notesList',JSON.stringify(notesList));\n    }\n\n    const getNoteTitle = () => {\n        if(props.action === 'add')\n            return `<b>Title</b>`;\n        let noteId = props.noteId;\n        return notes[noteId][\"title\"];\n    }\n\n    const getNoteContent = () => {\n        if(props.action === 'add')\n            return `<p></p>`;\n        let noteId = props.noteId;\n        return notes[noteId][\"content\"];\n    }\n\n    return (\n        <>\n            <Grid\n                container\n                className = \"newNoteContainer\"\n            >\n                <Grid item xs={12}>\n                    <Paper \n                        elevation={2}\n                        className = \"titleEditor\"\n                    >\n                        <Editor\n                            initialValue = {getNoteTitle()}\n                            apiKey = '2fo1990uwcftp3lsekv7i48ir1929y8b4xob32u307wqsqtj'\n                            id = {\"title$\"+id}\n                            init={{\n                                selector: 'div',\n                                height: 100,\n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    `undo redo`,  \n                                inline: true,\n                                skin: 'material-classic',\n                                icons: 'material'\n                            }}\n                            onEditorChange = {handleTitleChange}  \n                        />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper \n                        elevation={2}\n                        className = \"contentEditor\"\n                    >\n                        <Editor\n                            initialValue = {getNoteContent()}\n                            apiKey = '2fo1990uwcftp3lsekv7i48ir1929y8b4xob32u307wqsqtj'\n                            id = {\"content$\"+id}\n                            init={{\n                                selector: 'div',\n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    `undo redo | bold italic underline | alignleft aligncenter alignright alignjustify |\n                                    bullist numlist | link`,\n                                auto_focus: \"content$\"+id,\n                                branding: false,\n                                height:350,\n                                resize:false,\n                                content_style:\n                                 `@import url('https://fonts.googleapis.com/css?family=Lato:300,400,500,700&display=swap'); \n                                  body { font-family: 'Lato'}`,\n                                skin: 'material-classic',\n                                icons: 'material'\n                            }}\n                            onEditorChange = {handleContentChange}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid\n                    container item\n                    justify = \"center\"\n                    className = \"nav\"\n                >\n                    <Grid item>\n                        <Fab color=\"secondary\" onClick={()=>props.changeView({currentView:'home'})}>\n                            <HomeIcon />\n                        </Fab>\n                    </Grid>\n                    <Grid item><span className = \"tab\"></span></Grid>\n                    <Grid item>\n                        <Fab color=\"secondary\" onClick={()=>props.changeView({currentView:'contact'})}>\n                            <ContactsRounded />\n                        </Fab>\n                    </Grid>\n                </Grid>\n            </Grid>\n            \n        </>\n    );\n}","import React from 'react';\nimport {TextField, Button } from '@material-ui/core';\nimport '../css/contact.css'\n\nclass Contact extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = { \n            name :{\n                error:'',\n                value:''\n            },\n            email:{\n                error:'',\n                value:''\n            },\n            message:{\n                error:'',\n                value:''\n            },\n            isValid :true,\n            successMessage:''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value =  target.value;\n        this.setState({[name]:{\n            error:'',\n            value:value\n            },\n            isValid:true,\n            successMessage:''\n        })\n    }\n\n    handleSubmit(event){\n        const name = this.state.name.value;\n        const email = this.state.email.value;\n        const message = this.state.message.value;\n        if(!(name.trim())){\n            this.setState( {name :{\n                    error:\"Name can't be empty\",\n                    value:name\n                },\n                isValid:false    \n            });\n            return;\n        }\n        if(!(email.trim())){\n            this.setState( {email :{\n                    error:\"Email can't be empty\",\n                    value:email\n                },\n                isValid:false  \n            });\n            return;\n        }\n        if(!(message.trim())){\n            this.setState( {message :{\n                    error:\"Message can't be empty\",\n                    value:message\n                },\n                isValid:false\n            });\n            return;\n        }\n        if(!email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/))\n        {\n            this.setState( {email :{\n                    error:\"Please enter a valid email\",\n                    value:email\n                },\n                isValid:false \n            });\n            return;\n        }\n        if(this.state.isValid)\n        {\n            const templateId = 'template_6ly1xta';\n            this.sendFeedback(templateId, {message_html: this.state.message.value, from_name: this.state.name.value, from_mail: this.state.email.value})\n            this.setState( { \n                name :{\n                    error:'',\n                    value:''\n                },\n                email:{\n                    error:'',\n                    value:''\n                },\n                message:{\n                    error:'',\n                    value:''\n                },\n                isValid :true\n            });\n            this.setState({successMessage:'Hey! thanks for responding, have a nice day!'});\n        }\n    }\n\n    sendFeedback (templateId, variables) {\n        window.emailjs.send(\n            'gmail', templateId,\n            variables\n            ).then(res => {\n            console.log('Email successfully sent!')\n            })\n            .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <div className = 'successMessage'>{this.state.successMessage}</div>\n                <form noValidate autoComplete=\"off\">\n                    <TextField \n                        label=\"Name\" \n                        name=\"name\"\n                        value={this.state.name.value}\n                        onChange = {this.handleChange}\n                        error = {!(this.state.name.error === '')}\n                        helperText = {this.state.name.error}\n                        required\n                        fullWidth\n                        margin = \"normal\"\n                    />\n                    <TextField \n                        label=\"Email\" \n                        name=\"email\"\n                        value={this.state.email.value}\n                        onChange = {this.handleChange}\n                        error = {!(this.state.email.error === '')}\n                        helperText = {this.state.email.error}\n                        required\n                        size=\"medium\"\n                        fullWidth\n                        margin = \"normal\"\n                    />\n                    <TextField \n                        label=\"Message\" \n                        name=\"message\"\n                        value={this.state.message.value}\n                        onChange = {this.handleChange}\n                        error = {!(this.state.message.error === '')}\n                        helperText = {this.state.message.error}\n                        required\n                        size=\"medium\"\n                        fullWidth\n                        margin = \"normal\"\n                        multiline\n                        rows = {4}\n                    />\n                    <Button \n                        variant = 'contained' \n                        color='primary' \n                        fullWidth   \n                        onClick = {this.handleSubmit} \n                    >\n                        Send\n                    </Button>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport {Grid, IconButton} from '@material-ui/core';\nimport Contact from './contact';\nimport '../css/contact.css';\nimport { Facebook, Favorite, GitHub, Home, Instagram, Language, LinkedIn } from '@material-ui/icons';\n\nfunction ContactContainer(props){\n    return(\n        <>\n            <Grid\n                container \n                justify = \"center\"\n                className = \"contactContainer\"\n            >\n                <Grid item xs={12}  className = \"contactHead\">\n                    <p>Contact</p>\n                </Grid>\n                <Grid item xs={1} sm={4}></Grid>\n                <Grid item xs={10} sm={4}>\n                    <Contact />\n                </Grid>\n                <Grid item xs={1} sm={4}></Grid>\n            </Grid>\n            <Grid\n                container \n                justify = \"center\"\n                className = \"bottomNav\"\n            >\n                <Grid \n                    item\n                >\n                    <IconButton >\n                        <a href=\"https://www.instagram.com/nithish_msn/\" rel='noopener'><Instagram color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton >\n                    <a href=\"https://www.facebook.com/nithu.mucherla\" rel='noopener'><Facebook color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton onClick = {()=>props.changeView({currentView:'home'})}>\n                        <Home color = \"secondary\"/>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton >\n                        <a href=\"https://www.linkedin.com/in/sai-nithish-mucherla\" rel='noopener' ><LinkedIn color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton >\n                        <a href=\"https://github.com/nithish-mucherla\"  rel='noopener' ><GitHub color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton >\n                        <a href=\"https://nithishmucherla.tech\"  rel='noopener' ><Language color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n            </Grid>\n            <Grid \n                container \n                justify = \"center\"\n            >\n                <p className = \"credits\">Made with &#9829; by Nithish Mucherla</p>\n            </Grid>\n        </>\n    );\n}\n\nexport default ContactContainer","import './App.css';\nimport Home from './components/Home/js/Home.js';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport {useState} from 'react';\nimport NewNote from './components/NewNote/js/NewNote.js';\nimport Contact from './components/contact/js/contactContainer.js';\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: \"#0586ff\"\n      }\n  }\n});\n\nfunction App() {\n\n    const [view, setView] = useState({ currentView: 'home', noteId: '' });\n    if( view.currentView === 'home') \n        return (\n            <ThemeProvider theme = {theme}>\n                <div className = \"App\">\n                    <Home changeView = {setView}/>\n                </div>\n            </ThemeProvider>     \n        );\n    else if (view.currentView === 'newNote')\n        return <NewNote action = \"add\" changeView = {setView}/>;\n    else if (view.currentView === 'contact')\n        return (\n            <ThemeProvider theme = {theme}>\n                <div className = \"App\" >\n                    <Contact changeView = {setView}/>\n                </div>\n            </ThemeProvider>  \n        );\n    else \n        return <NewNote action = \"edit\" changeView = {setView} noteId = {view.noteId} />;\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}