{"version":3,"sources":["components/BottomNav/js/BottomNav.js","components/NotesContainer/launcherImage.svg","components/NoteItem/js/NoteItem.js","components/NotesContainer/js/NotesContainer.js","components/Home/js/Home.js","components/NewNote/js/NewNote.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","BottomNav","props","classes","AppBar","color","className","Toolbar","Fab","aria-label","onClick","changeView","currentView","font","fontFamily","NoteItem","notesList","JSON","parse","localStorage","getItem","currentNote","noteId","content","lastEdit","title","useEffect","document","getElementById","innerHTML","ListItem","button","alignItems","ListItemText","primary","id","secondary","Date","toString","ListItemIcon","IconButton","e","stopPropagation","updateNotes","setItem","stringify","deleteNote","Notes","useState","notes","updateNotesList","Object","keys","length","List","map","Grid","container","item","xs","src","launcherImg","alt","Home","NewNote","action","uuidv4","direction","Paper","elevation","initialValue","getNoteTitle","apiKey","init","selector","height","menubar","plugins","toolbar","inline","onEditorChange","editor","eid","now","getContent","getNoteContent","auto_focus","createMuiTheme","palette","main","App","view","setView","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d07e138d.chunk.js","sourcesContent":["import {AppBar} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport '../css/BottomNav.css';\n\nconst useStyles = makeStyles( (theme) => ({\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function BottomNav(props) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                <Toolbar>\n                    <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton} onClick={()=>props.changeView({currentView:'newNote'})}>\n                        <AddIcon />\n                    </Fab>\n                    <div className={classes.grow} />\n                </Toolbar>\n            </AppBar>\n            <Toolbar />  \n        </>    \n    );\n}","export default __webpack_public_path__ + \"static/media/launcherImage.4bb69a3f.svg\";","import { ListItem, ListItemText, ListItemIcon, makeStyles, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteRounded';\nimport \"../css/NoteItem.css\";\nimport {useEffect} from 'react';\n\nconst useStyles = makeStyles ( () => ({\n    font: {\n        fontFamily: 'Lato'\n    }\n}));\nexport default function NoteItem(props) {\n    const notesList = JSON.parse(localStorage.getItem('notesList'));\n    const currentNote = notesList[props.noteId];\n    const content = (currentNote.content) ? currentNote.content : \"\";\n    const lastEdit = currentNote.lastEdit;\n    const title = (currentNote.title) ? currentNote.title : \"\";\n    \n    const deleteNote = (e,id) => {\n        e.stopPropagation();\n        delete notesList[id];\n        props.updateNotes(notesList);\n        localStorage.setItem('notesList', JSON.stringify(notesList));\n    }\n\n    useEffect(() => {\n        document.getElementById(props.noteId+\"$content\").innerHTML = content;\n        document.getElementById(props.noteId+\"$title\").innerHTML = title;\n    });\n    const classes = useStyles();\n    return (\n        <ListItem \n            button \n            alignItems=\"center\" \n            className = \"NoteItem\"\n            onClick = { \n                ()=> {\n                    props.changeView( { currentView : 'editNote', noteId: props.noteId} );\n                }\n            } \n        >\n            <ListItemText \n                className = {classes.font}\n                primary = { <span id = {props.noteId+\"$title\"}  className = \"title\"></span> } \n                secondary = { \n                    <>\n                        <span id={props.noteId+\"$content\"} className = \"content\"></span>\n                        <i className = \"lastEdit\">last edit: {new Date(lastEdit).toString()}</i>\n                    </> \n                }\n            />\n            <ListItemIcon>\n                <IconButton onClick = { (e) => deleteNote(e,props.noteId) }>\n                    <DeleteIcon color = \"secondary\" className = \"deleteIcon\" />\n                </IconButton>           \n            </ListItemIcon>\n        </ListItem>\n    );\n}","import {useState} from 'react';\nimport launcherImg from '../launcherImage.svg';\nimport '../css/NotesContainer.css';\nimport Grid from '@material-ui/core/Grid';\nimport NoteItem from '../../NoteItem/js/NoteItem.js';\nimport { List } from '@material-ui/core';\n\nexport default function Notes(props) {\n    const [notes, updateNotesList] = useState(JSON.parse(localStorage.getItem('notesList')) || {});\n    let notesCount = Object.keys(notes).length;\n    \n    if(notesCount > 0)\n        return (\n            <List>\n                {\n                    Object.keys(notes).map( (id)=><NoteItem \n                        changeView = {props.changeView} \n                        noteId = {id} \n                        key = {id}\n                        updateNotes = {updateNotesList}\n                    /> )\n                }  \n            </List>   \n        );\n    return (\n        <Grid\n            container\n            alignItems = \"center\"\n            className = \"notesContainer\"\n        >\n            <Grid item xs={1}></Grid>\n            <Grid item xs= {10}>\n                <Grid item xs={12}>\n                    <center><img src = {launcherImg} alt=\"launcherImg\" className = \"launcherImg centered\"/></center>\n                </Grid>\n                <Grid item xs = {12}>\n                    <h1 className = \"headingMain\">create <b>NOTES</b> with ease!</h1>\n                </Grid>\n            </Grid>\n            <Grid item xs={1}></Grid>\n        </Grid>\n    );\n}","import BottomNav from '../../BottomNav/js/BottomNav.js';\nimport Notes from '../../NotesContainer/js/NotesContainer.js';\n\nfunction Home(props) {\n    return (\n        <>\n            <Notes changeView = {props.changeView} />\n            <BottomNav changeView = {props.changeView} />\n        </>\n    )\n}\n\nexport default Home;","import Grid from '@material-ui/core/Grid';\nimport {Editor} from '@tinymce/tinymce-react';\nimport {v4 as uuidv4} from 'uuid';\nimport Paper from '@material-ui/core/Paper';\nimport \"../css/NewNote.css\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles( (theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -10,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function NewNote(props) {\n\n    const classes = useStyles();\n    const notes = JSON.parse(localStorage.getItem('notesList'));\n    \n    if(!notes) {\n        localStorage.setItem( 'notesList' , JSON.stringify({}) );\n    } \n\n    const generateId = ()=>{\n        if(props.action === 'add') \n        return uuidv4();\n        return props.noteId;\n    }\n    const id = generateId(); \n\n    const handleContentChange = (e, editor) => {\n        let eid = id;\n        let notesList = JSON.parse(localStorage.getItem('notesList'));\n        if(!notesList[eid]) {\n            notesList[eid] = { \n                lastEdit: Date.now(),\n                content: editor.getContent()\n            };\n        }\n        else {\n            notesList[eid][\"lastEdit\"] = Date.now();\n            notesList[eid][\"content\"] = editor.getContent();\n        }       \n        localStorage.setItem('notesList',JSON.stringify(notesList));\n    }\n\n    const handleTitleChange = (e, editor) => {\n        let eid = id;\n        let notesList = JSON.parse(localStorage.getItem('notesList'));\n        if(!notesList[eid]) {\n            notesList[eid] = { \n                lastEdit: Date.now(),\n                title: editor.getContent()\n            };\n        }\n        else {\n            notesList[eid][\"lastEdit\"] = Date.now();\n            notesList[eid][\"title\"] = editor.getContent();\n        }    \n        localStorage.setItem('notesList',JSON.stringify(notesList));\n    }\n\n    const getNoteTitle = () => {\n        if(props.action === 'add')\n            return `<b>Title</b>`;\n        let noteId = props.noteId;\n        return notes[noteId][\"title\"];\n    }\n\n    const getNoteContent = () => {\n        if(props.action === 'add')\n            return `<p></p>`;\n        let noteId = props.noteId;\n        return notes[noteId][\"content\"];\n    }\n\n    return (\n        <Grid\n            container\n            direction = \"column\"\n            className = \"newNoteContainer\"\n        >\n            <Grid item xs={12}>\n                <Paper \n                    elevation={2}\n                    className = \"titleEditor\"\n                >\n                    <Editor\n                        initialValue = {getNoteTitle()}\n                        apiKey = '2fo1990uwcftp3lsekv7i48ir1929y8b4xob32u307wqsqtj'\n                        id = {\"title$\"+id}\n                        init={{\n                            selector: 'div',\n                            height: 100,\n                            menubar: false,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                `undo redo`,  \n                            inline: true,\n                        }}\n                        onEditorChange = {handleTitleChange}  \n                    />\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper \n                    elevation={2}\n                    className = \"contentEditor\"\n                >\n                    <Editor\n                        initialValue = {getNoteContent()}\n                        apiKey = '2fo1990uwcftp3lsekv7i48ir1929y8b4xob32u307wqsqtj'\n                        id = {\"content$\"+id}\n                        init={{\n                            selector: 'div',\n                            menubar: false,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                `undo redo | bold italic underline | alignleft aligncenter alignright alignjustify | code\n                                bullist numlist outdent indent`,\n                            inline: true,\n                            auto_focus: \"content$\"+id\n                        }}\n                        onEditorChange = {handleContentChange}\n                    />\n                </Paper>\n                <Toolbar>\n                    <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton} onClick={()=>props.changeView({currentView:'home'})}>\n                        <HomeIcon />\n                    </Fab>\n                    <div className={classes.grow} />\n                </Toolbar>\n            </Grid>\n        </Grid>\n    );\n}","import './App.css';\nimport Home from './components/Home/js/Home.js';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport {useState} from 'react';\nimport NewNote from './components/NewNote/js/NewNote.js';\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: \"#0586ff\"\n      }\n  }\n});\n\nfunction App() {\n\n    const [view, setView] = useState({ currentView: 'home', noteId: '' });\n    if( view.currentView === 'home') \n        return (\n            <ThemeProvider theme = {theme}>\n                <div className = \"App\">\n                    <Home changeView = {setView}/>\n                </div>\n            </ThemeProvider>     \n        );\n    else if (view.currentView === 'newNote')\n        return <NewNote action = \"add\" changeView = {setView}/>;\n    else \n        return <NewNote action = \"edit\" changeView = {setView} noteId = {view.noteId} />;\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}