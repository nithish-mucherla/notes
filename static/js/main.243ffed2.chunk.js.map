{"version":3,"sources":["components/BottomNav/js/BottomNav.js","components/NotesContainer/launcherImage.svg","components/NoteItem/js/NoteItem.js","components/SearchNotes/js/SearchNotes.js","components/NotesList/js/NotesList.js","components/NotesContainer/js/NotesContainer.js","components/Home/js/Home.js","components/NewNote/js/NewNote.js","components/contact/js/contact.js","components/contact/js/contactContainer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","BottomNav","props","classes","AppBar","color","className","Toolbar","Fab","aria-label","onClick","changeView","currentView","IconButton","edge","ContactsRounded","font","fontFamily","NoteItem","notesList","JSON","parse","localStorage","getItem","currentNote","noteId","content","lastEdit","title","useEffect","document","getElementById","innerHTML","ListItem","button","alignItems","e","target","tagName","toLowerCase","ListItemText","primary","id","secondary","Date","toString","ListItemIcon","updateNotes","notes","setItem","stringify","stopPropagation","deleteNote","fontFam","SearchBox","width","marginLeft","marginTop","marginBottom","fontColor","updateNotesList","FormControl","InputLabel","Input","onChange","searchKey","value","handleChange","startAdornment","InputAdornment","NotesList","notesIds","List","sort","a","b","key1","key2","map","Notes","useState","notesCount","Object","keys","length","searchNotes","filter","includes","Grid","container","item","xs","src","launcherImg","alt","Home","NewNote","action","uuidv4","Paper","elevation","initialValue","getNoteTitle","apiKey","init","selector","height","menubar","plugins","toolbar","inline","skin","icons","onEditorChange","editor","eid","now","getContent","getNoteContent","auto_focus","branding","resize","content_style","toolbar_location","statusbar","justify","Contact","state","name","error","email","message","isValid","successMessage","bind","handleSubmit","event","this","setState","trim","match","sendFeedback","message_html","from_name","from_mail","templateId","variables","window","emailjs","send","then","res","console","log","catch","err","Fragment","noValidate","autoComplete","TextField","label","helperText","required","fullWidth","size","multiline","rows","Button","variant","React","Component","ContactContainer","sm","href","rel","Instagram","Facebook","LinkedIn","GitHub","Language","createMuiTheme","palette","main","App","view","setView","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.243ffed2.chunk.js","sourcesContent":["import {AppBar, IconButton} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport '../css/BottomNav.css';\nimport { ContactsRounded } from '@material-ui/icons';\n\nconst useStyles = makeStyles( (theme) => ({\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function BottomNav(props) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                <Toolbar>\n                    <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton} onClick={()=>props.changeView({currentView:'newNote'})}>\n                        <AddIcon />\n                    </Fab>\n                    <div className={classes.grow} />\n                    <IconButton edge = \"end\" color = \"inherit\" onClick={()=>props.changeView({currentView:'contact'})}>\n                        <ContactsRounded />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />  \n        </>    \n    );\n}","export default __webpack_public_path__ + \"static/media/launcherImage.4bb69a3f.svg\";","import { ListItem, ListItemText, ListItemIcon, makeStyles, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteRounded';\nimport \"../css/NoteItem.css\";\nimport {useEffect} from 'react';\n\nconst useStyles = makeStyles ( () => ({\n    font: {\n        fontFamily: 'Lato'\n    }\n}));\nexport default function NoteItem(props) {\n    const notesList = JSON.parse(localStorage.getItem('notesList'));\n    const currentNote = notesList[props.noteId];\n    const content = (currentNote.content) ? currentNote.content : \"\";\n    const lastEdit = currentNote.lastEdit;\n    const title = (currentNote.title) ? currentNote.title : \"\";\n    \n    const deleteNote = (e,id) => {\n        delete notesList[id];\n        props.updateNotes({...props.notes, notesList:notesList });\n        localStorage.setItem('notesList', JSON.stringify(notesList));\n        e.stopPropagation();\n    }\n\n    useEffect(() => {\n        document.getElementById(props.noteId+\"$content\").innerHTML = content;\n        document.getElementById(props.noteId+\"$title\").innerHTML = title;\n    });\n    const classes = useStyles();\n    return (\n        <ListItem \n            button \n            alignItems=\"center\" \n            className = \"NoteItem\"\n            onClick = { \n                (e)=> {\n                    if(e.target.tagName.toLowerCase() !== 'a')\n                    props.changeView( { currentView : 'editNote', noteId: props.noteId} );\n                    \n                }\n            } \n        >\n            <ListItemText \n                className = {classes.font}\n                primary = { <span id = {props.noteId+\"$title\"}  className = \"noteTitle\"></span> } \n                secondary = { \n                    <>\n                        <span id={props.noteId+\"$content\"} className = \"noteContent\"></span>\n                        <i className = \"lastEdit\">last edit: {new Date(lastEdit).toString()}</i>\n                    </> \n                }\n            />\n            <ListItemIcon>\n                <IconButton onClick = { (e) => deleteNote(e,props.noteId) }>\n                    <DeleteIcon color = \"secondary\" className = \"deleteIcon\" />\n                </IconButton>           \n            </ListItemIcon>\n        </ListItem>\n    );\n}","import { FormControl, IconButton, Input, InputLabel, InputAdornment, makeStyles } from \"@material-ui/core\";\nimport '../css/searchBox.css';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles( (theme) => ({\n    fontFam: {\n        fontFamily: 'Lato'\n    },\n    SearchBox : {\n        width: '80%',\n        marginLeft: '10%',\n        marginTop: '5vw',\n        marginBottom: '2vw'\n    },\n    fontColor: {\n        color: '#8f8f8f'\n    }\n}) );\n\nexport const SearchBox = ({ notes, updateNotesList }) => {\n    const classes = useStyles(); \n    const handleChange = (e) => {\n        updateNotesList( { ...notes, searchKey: e.target.value } );\n    }    \n    return (\n        <FormControl\n            className = {classes.SearchBox}\n        >\n            <InputLabel className = {classes.fontFam}>Search Notes</InputLabel>\n            <Input\n                onChange = {(e)=>handleChange(e)}\n                className = {classes.fontFam+\" \"+classes.fontColor}\n                startAdornment = {\n                    <InputAdornment position=\"start\">\n                        <IconButton>\n                            <SearchIcon />\n                        </IconButton>\n                    </InputAdornment>\n                }\n            />\n        </FormControl>    \n    );\n}","import NoteItem from '../../NoteItem/js/NoteItem.js';\nimport { List, ListItem } from '@material-ui/core';\nimport { SearchBox } from '../../SearchNotes/js/SearchNotes.js';\n\nexport const NotesList = ({ changeView, updateNotesList, notes, notesIds }) => {\n    return (\n        <List>\n            <ListItem>\n                <SearchBox \n                    updateNotesList = {updateNotesList}\n                    notes = {notes}\n                />\n            </ListItem>\n            {\n                notesIds.sort((a,b) => {\n                    let key1 = notes.notesList[a].lastEdit, key2 = notes.notesList[b].lastEdit;\n                    if(key1 < key2) return 1;\n                    if(key1 > key2) return -1;\n                    return 0; \n                }).map( (id)=><NoteItem \n                    changeView = { changeView } \n                    noteId = {id} \n                    key = {id}\n                    notes = {notes}\n                    updateNotes = {updateNotesList}\n                /> )\n            }  \n        </List>  \n    );\n}","import {useState} from 'react';\nimport launcherImg from '../launcherImage.svg';\nimport '../css/NotesContainer.css';\nimport Grid from '@material-ui/core/Grid';\nimport {NotesList} from '../../NotesList/js/NotesList.js';\n\nexport default function Notes({ changeView }) {\n    const [notes, updateNotesList] = useState( \n        { \n            notesList: ( JSON.parse(localStorage.getItem('notesList')) || {} ), \n            searchKey: '' \n        } || {}\n    );\n    let notesCount = Object.keys(notes.notesList).length;\n    const searchNotes = Object.keys(notes.notesList).filter( (id) => {\n        return (notes.searchKey==='') ? true :  \n        ( notes.notesList[id].content && notes.notesList[id].content.includes(notes.searchKey) ) || \n        ( notes.notesList[id].title && notes.notesList[id].title.includes(notes.searchKey) )\n    });\n\n    if(notesCount > 0)\n        return (\n            <NotesList \n                changeView = {changeView} \n                updateNotesList = {updateNotesList} \n                notes = {notes}\n                notesIds = {searchNotes}\n            />\n        );\n    return (\n        <Grid\n            container\n            alignItems = \"center\"\n            className = \"notesContainer\"\n        >\n            <Grid item xs={1}></Grid>\n            <Grid item xs= {10}>\n                <Grid item xs={12}>\n                    <center><img src = {launcherImg} alt=\"launcherImg\" className = \"launcherImg centered\"/></center>\n                </Grid>\n                <Grid item xs = {12}>\n                    <h1 className = \"headingMain\">create <b>NOTES</b> with ease!</h1>\n                </Grid>\n            </Grid>\n            <Grid item xs={1}></Grid>\n        </Grid>\n    );\n}","import BottomNav from '../../BottomNav/js/BottomNav.js';\nimport Notes from '../../NotesContainer/js/NotesContainer.js';\n\nfunction Home(props) {\n    return (\n        <>\n            <Notes changeView = {props.changeView} />\n            <BottomNav changeView = {props.changeView} />\n        </>\n    )\n}\n\nexport default Home;","import Grid from '@material-ui/core/Grid';\nimport {Editor} from '@tinymce/tinymce-react';\nimport {v4 as uuidv4} from 'uuid';\nimport Paper from '@material-ui/core/Paper';\nimport \"../css/NewNote.css\";\nimport Fab from '@material-ui/core/Fab';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ContactsRounded from '@material-ui/icons/ContactsRounded';\n\nexport default function NewNote(props) {\n\n    const notes = JSON.parse(localStorage.getItem('notesList'));\n    \n    if(!notes) {\n        localStorage.setItem( 'notesList' , JSON.stringify({}) );\n    } \n\n    const generateId = ()=>{\n        if(props.action === 'add') \n        return uuidv4();\n        return props.noteId;\n    }\n    const id = generateId(); \n\n    const handleContentChange = (e, editor) => {\n        let eid = id;\n        let notesList = JSON.parse(localStorage.getItem('notesList'));\n        if(!notesList[eid]) {\n            notesList[eid] = { \n                lastEdit: Date.now(),\n                content: editor.getContent()\n            };\n        }\n        else {\n            notesList[eid][\"lastEdit\"] = Date.now();\n            notesList[eid][\"content\"] = editor.getContent();\n        }       \n        localStorage.setItem('notesList',JSON.stringify(notesList));\n    }\n\n    const handleTitleChange = (e, editor) => {\n        let eid = id;\n        let notesList = JSON.parse(localStorage.getItem('notesList'));\n        if(!notesList[eid]) {\n            notesList[eid] = { \n                lastEdit: Date.now(),\n                title: editor.getContent()\n            };\n        }\n        else {\n            notesList[eid][\"lastEdit\"] = Date.now();\n            notesList[eid][\"title\"] = editor.getContent();\n        }    \n        localStorage.setItem('notesList',JSON.stringify(notesList));\n    }\n\n    const getNoteTitle = () => {\n        if(props.action === 'add')\n            return `<b>Title</b>`;\n        let noteId = props.noteId;\n        return notes[noteId][\"title\"];\n    }\n\n    const getNoteContent = () => {\n        if(props.action === 'add')\n            return `<p></p>`;\n        let noteId = props.noteId;\n        return notes[noteId][\"content\"];\n    }\n\n    return (\n        <>\n            <Grid\n                container\n                className = \"newNoteContainer\"\n            >\n                <Grid item xs={12}>\n                    <Paper \n                        elevation={2}\n                        className = \"titleEditor\"\n                    >\n                        <Editor\n                            initialValue = {getNoteTitle()}\n                            apiKey = '2fo1990uwcftp3lsekv7i48ir1929y8b4xob32u307wqsqtj'\n                            id = {\"title$\"+id}\n                            init={{\n                                selector: 'div',\n                                height: 100,\n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    `undo redo`,  \n                                inline: true,\n                                skin: 'material-classic',\n                                icons: 'material'\n                            }}\n                            onEditorChange = {handleTitleChange}  \n                        />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper \n                        elevation={2}\n                        className = \"contentEditor\"\n                    >\n                        <Editor\n                            initialValue = {getNoteContent()}\n                            apiKey = '2fo1990uwcftp3lsekv7i48ir1929y8b4xob32u307wqsqtj'\n                            id = {\"content$\"+id}\n                            init={{\n                                selector: 'div',\n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    `undo redo | bold italic underline | alignleft aligncenter alignright alignjustify | \n                                    bullist numlist wordcount`,\n                                auto_focus: \"content$\"+id,\n                                branding: false,\n                                height:350,\n                                resize:false,\n                                content_style:\n                                 `@import url('https://fonts.googleapis.com/css?family=Lato:300,400,500,700&display=swap'); \n                                  body { font-family: 'Lato'}`,\n                                skin: 'material-classic',\n                                icons: 'material',\n                                toolbar_location: 'bottom',\n                                statusbar:false,\n\n                            }}\n                            onEditorChange = {handleContentChange}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid\n                    container item\n                    justify = \"center\"\n                    className = \"nav\"\n                >\n                    <Grid item>\n                        <Fab color=\"secondary\" onClick={()=>props.changeView({currentView:'home'})}>\n                            <HomeIcon />\n                        </Fab>\n                    </Grid>\n                    <Grid item><span className = \"tab\"></span></Grid>\n                    <Grid item>\n                        <Fab color=\"secondary\" onClick={()=>props.changeView({currentView:'contact'})}>\n                            <ContactsRounded />\n                        </Fab>\n                    </Grid>\n                </Grid>\n            </Grid>\n            \n        </>\n    );\n}","import React from 'react';\nimport {TextField, Button } from '@material-ui/core';\nimport '../css/contact.css'\n\nclass Contact extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = { \n            name :{\n                error:'',\n                value:''\n            },\n            email:{\n                error:'',\n                value:''\n            },\n            message:{\n                error:'',\n                value:''\n            },\n            isValid :true,\n            successMessage:''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value =  target.value;\n        this.setState({[name]:{\n            error:'',\n            value:value\n            },\n            isValid:true,\n            successMessage:''\n        })\n    }\n\n    handleSubmit(event){\n        const name = this.state.name.value;\n        const email = this.state.email.value;\n        const message = this.state.message.value;\n        if(!(name.trim())){\n            this.setState( {name :{\n                    error:\"Name can't be empty\",\n                    value:name\n                },\n                isValid:false    \n            });\n            return;\n        }\n        if(!(email.trim())){\n            this.setState( {email :{\n                    error:\"Email can't be empty\",\n                    value:email\n                },\n                isValid:false  \n            });\n            return;\n        }\n        if(!(message.trim())){\n            this.setState( {message :{\n                    error:\"Message can't be empty\",\n                    value:message\n                },\n                isValid:false\n            });\n            return;\n        }\n        if(!email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/))\n        {\n            this.setState( {email :{\n                    error:\"Please enter a valid email\",\n                    value:email\n                },\n                isValid:false \n            });\n            return;\n        }\n        if(this.state.isValid)\n        {\n            const templateId = 'template_6ly1xta';\n            this.sendFeedback(templateId, {message_html: this.state.message.value, from_name: this.state.name.value, from_mail: this.state.email.value})\n            this.setState( { \n                name :{\n                    error:'',\n                    value:''\n                },\n                email:{\n                    error:'',\n                    value:''\n                },\n                message:{\n                    error:'',\n                    value:''\n                },\n                isValid :true\n            });\n            this.setState({successMessage:'Hey! thanks for responding, have a nice day!'});\n        }\n    }\n\n    sendFeedback (templateId, variables) {\n        window.emailjs.send(\n            'gmail', templateId,\n            variables\n            ).then(res => {\n            console.log('Email successfully sent!')\n            })\n            .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <div className = 'successMessage'>{this.state.successMessage}</div>\n                <form noValidate autoComplete=\"off\">\n                    <TextField \n                        label=\"Name\" \n                        name=\"name\"\n                        value={this.state.name.value}\n                        onChange = {this.handleChange}\n                        error = {!(this.state.name.error === '')}\n                        helperText = {this.state.name.error}\n                        required\n                        fullWidth\n                        margin = \"normal\"\n                    />\n                    <TextField \n                        label=\"Email\" \n                        name=\"email\"\n                        value={this.state.email.value}\n                        onChange = {this.handleChange}\n                        error = {!(this.state.email.error === '')}\n                        helperText = {this.state.email.error}\n                        required\n                        size=\"medium\"\n                        fullWidth\n                        margin = \"normal\"\n                    />\n                    <TextField \n                        label=\"Message\" \n                        name=\"message\"\n                        value={this.state.message.value}\n                        onChange = {this.handleChange}\n                        error = {!(this.state.message.error === '')}\n                        helperText = {this.state.message.error}\n                        required\n                        size=\"medium\"\n                        fullWidth\n                        margin = \"normal\"\n                        multiline\n                        rows = {4}\n                    />\n                    <Button \n                        variant = 'contained' \n                        color='primary' \n                        fullWidth   \n                        onClick = {this.handleSubmit} \n                    >\n                        Send\n                    </Button>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport {Grid, IconButton} from '@material-ui/core';\nimport Contact from './contact';\nimport '../css/contact.css';\nimport { Facebook, Favorite, GitHub, Home, Instagram, Language, LinkedIn } from '@material-ui/icons';\n\nfunction ContactContainer(props){\n    return(\n        <>\n            <Grid\n                container \n                justify = \"center\"\n                className = \"contactContainer\"\n            >\n                <Grid item xs={12}  className = \"contactHead\">\n                    <p>Contact</p>\n                </Grid>\n                <Grid item xs={1} sm={4}></Grid>\n                <Grid item xs={10} sm={4}>\n                    <Contact />\n                </Grid>\n                <Grid item xs={1} sm={4}></Grid>\n            </Grid>\n            <Grid\n                container \n                justify = \"center\"\n                className = \"bottomNav\"\n            >\n                <Grid \n                    item\n                >\n                    <IconButton >\n                        <a href=\"https://www.instagram.com/nithish_msn/\" rel='noopener'><Instagram color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton >\n                    <a href=\"https://www.facebook.com/nithu.mucherla\" rel='noopener'><Facebook color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton onClick = {()=>props.changeView({currentView:'home'})}>\n                        <Home color = \"secondary\"/>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton >\n                        <a href=\"https://www.linkedin.com/in/sai-nithish-mucherla\" rel='noopener' ><LinkedIn color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton >\n                        <a href=\"https://github.com/nithish-mucherla\"  rel='noopener' ><GitHub color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n                <Grid \n                    item\n                >\n                    <IconButton >\n                        <a href=\"https://nithish-mucherla.tech\"  rel='noopener' ><Language color=\"action\"/></a>\n                    </IconButton>\n                </Grid>\n            </Grid>\n            <Grid \n                container \n                justify = \"center\"\n            >\n                <p className = \"credits\">Made with &#9829; by Nithish Mucherla</p>\n            </Grid>\n        </>\n    );\n}\n\nexport default ContactContainer","import './App.css';\nimport Home from './components/Home/js/Home.js';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport {useState} from 'react';\nimport NewNote from './components/NewNote/js/NewNote.js';\nimport Contact from './components/contact/js/contactContainer.js';\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: \"#0586ff\"\n      }\n  }\n});\n\nfunction App() {\n\n    const [view, setView] = useState({ currentView: 'home', noteId: '' });\n    if( view.currentView === 'home') \n        return (\n            <ThemeProvider theme = {theme}>\n                <div className = \"App\">\n                    <Home changeView = {setView}/>\n                </div>\n            </ThemeProvider>     \n        );\n    else if (view.currentView === 'newNote')\n        return <NewNote action = \"add\" changeView = {setView}/>;\n    else if (view.currentView === 'contact')\n        return (\n            <ThemeProvider theme = {theme}>\n                <div className = \"App\" >\n                    <Contact changeView = {setView}/>\n                </div>\n            </ThemeProvider>  \n        );\n    else \n        return <NewNote action = \"edit\" changeView = {setView} noteId = {view.noteId} />;\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}